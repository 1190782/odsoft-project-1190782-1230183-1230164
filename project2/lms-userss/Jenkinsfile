pipeline {
    agent any

    environment {

        MAVEN_HOME = '/usr/bin/mvn'
        PATH = "${env.PATH}:${MAVEN_HOME}"
        GIT_REPO_URL = 'https://github.com/1190782/odsoft-project-1190782-1230183-1230164.git'
        GIT_BRANCH = 'main'
        CREDENTIALS_ID = 'github-jenkins-token'
        SERVER_PORT = '2226'
        IMAGE_NAME = 'lmsusers'
        IMAGE_TAG = 'latest'
    }

    stages {
        stage('Debug Environment') {
            steps {
                sh 'env'
                sh 'java --version'
                sh 'mvn --version'
                sh 'ls -la'
            }
        }

        stage('Check Docker') {
            steps {
                sh 'docker --version'
            }
        }

        stage('Checkout') {
            steps {
                git branch: "${GIT_BRANCH}",
                    url: "${GIT_REPO_URL}",
                    credentialsId: "${CREDENTIALS_ID}"
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('project2/lms-bookss') {
                    echo 'Installing dependencies...'
                    sh 'mvn dependency:resolve'
                }
            }
        }

        stage('Build') {
            steps {
                dir('project2/lms-userss') {
                    sh 'ls -la'
                    sh 'mvn clean compile'
                }

            }
        }

         stage('Checkstyle') {
            steps {
                dir('project2/lms-userss') {
                    script {
                        sh 'mvn checkstyle:checkstyle -Dcheckstyle.failOnViolation=false'
                    }
                }
            }
         }

         stage('Publish Checkstyle Report') {
             steps {
                dir('project2/lms-userss') {
                     publishHTML([
                         reportDir: 'target/site',
                         reportFiles: 'checkstyle.html',
                         reportName: 'Checkstyle Report',
                         keepAll: true,
                         allowMissing: false,
                         alwaysLinkToLastBuild: true
                     ])
                }
             }
         }

         stage('Tests') {
              steps {
                  dir('project2/lms-userss') {
                      script {
                            sh 'mvn test'
                      }
                  }
              }
         }
    }

    post {
        always {
            echo 'Pipeline completed. Cleaning workspace...'
            cleanWs()
        }
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}